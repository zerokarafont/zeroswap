/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IZeroswapCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZeroswapCallee__factory>;
    getContractFactory(
      name: "IZeroswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZeroswapFactory__factory>;
    getContractFactory(
      name: "IZeroswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZeroswapPair__factory>;
    getContractFactory(
      name: "IZeroswapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZeroswapRouter__factory>;
    getContractFactory(
      name: "ZeroswapERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroswapERC20__factory>;
    getContractFactory(
      name: "ZeroswapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroswapFactory__factory>;
    getContractFactory(
      name: "ZeroswapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroswapPair__factory>;
    getContractFactory(
      name: "ZeroswapRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZeroswapRouter__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IZeroswapCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZeroswapCallee>;
    getContractAt(
      name: "IZeroswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZeroswapFactory>;
    getContractAt(
      name: "IZeroswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZeroswapPair>;
    getContractAt(
      name: "IZeroswapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZeroswapRouter>;
    getContractAt(
      name: "ZeroswapERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroswapERC20>;
    getContractAt(
      name: "ZeroswapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroswapFactory>;
    getContractAt(
      name: "ZeroswapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroswapPair>;
    getContractAt(
      name: "ZeroswapRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZeroswapRouter>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
